[{"C:\\MERN\\coders_assemble\\client\\src\\index.js":"1","C:\\MERN\\coders_assemble\\client\\src\\App.js":"2","C:\\MERN\\coders_assemble\\client\\src\\store.js":"3","C:\\MERN\\coders_assemble\\client\\src\\utils\\setAuthToken.js":"4","C:\\MERN\\coders_assemble\\client\\src\\actions\\auth.js":"5","C:\\MERN\\coders_assemble\\client\\src\\components\\layouts\\Navbar.js":"6","C:\\MERN\\coders_assemble\\client\\src\\components\\layouts\\Alert.js":"7","C:\\MERN\\coders_assemble\\client\\src\\components\\layouts\\Landing.js":"8","C:\\MERN\\coders_assemble\\client\\src\\components\\dashboard\\Dashboard.js":"9","C:\\MERN\\coders_assemble\\client\\src\\components\\profile-forms\\AddEducation.js":"10","C:\\MERN\\coders_assemble\\client\\src\\components\\profile-forms\\CreateProfile.js":"11","C:\\MERN\\coders_assemble\\client\\src\\components\\profile-forms\\AddExperience.js":"12","C:\\MERN\\coders_assemble\\client\\src\\components\\profile-forms\\EditProfile.js":"13","C:\\MERN\\coders_assemble\\client\\src\\components\\Profiles\\Profiles.js":"14","C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\Profile.js":"15","C:\\MERN\\coders_assemble\\client\\src\\components\\auth\\Login.js":"16","C:\\MERN\\coders_assemble\\client\\src\\components\\routing\\privateRoute.js":"17","C:\\MERN\\coders_assemble\\client\\src\\components\\auth\\Register.js":"18","C:\\MERN\\coders_assemble\\client\\src\\components\\post\\Post.js":"19","C:\\MERN\\coders_assemble\\client\\src\\components\\posts\\Posts.js":"20","C:\\MERN\\coders_assemble\\client\\src\\actions\\types.js":"21","C:\\MERN\\coders_assemble\\client\\src\\actions\\alert.js":"22","C:\\MERN\\coders_assemble\\client\\src\\components\\dashboard\\DashboardActions.js":"23","C:\\MERN\\coders_assemble\\client\\src\\components\\dashboard\\Experience.js":"24","C:\\MERN\\coders_assemble\\client\\src\\components\\layouts\\Spinner.js":"25","C:\\MERN\\coders_assemble\\client\\src\\actions\\profile.js":"26","C:\\MERN\\coders_assemble\\client\\src\\components\\dashboard\\Education.js":"27","C:\\MERN\\coders_assemble\\client\\src\\components\\Profiles\\ProfileItem.js":"28","C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\ProfileTop.js":"29","C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\ProfileAbout.js":"30","C:\\MERN\\coders_assemble\\client\\src\\actions\\post.js":"31","C:\\MERN\\coders_assemble\\client\\src\\components\\posts\\PostForm.js":"32","C:\\MERN\\coders_assemble\\client\\src\\components\\posts\\PostItem.js":"33","C:\\MERN\\coders_assemble\\client\\src\\components\\post\\CommentItem.js":"34","C:\\MERN\\coders_assemble\\client\\src\\components\\post\\CommentForm.js":"35","C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\ProfileGithub.js":"36","C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\ProfileExperience.js":"37","C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\ProfileEducation.js":"38","C:\\MERN\\coders_assemble\\client\\src\\reducers\\index.js":"39","C:\\MERN\\coders_assemble\\client\\src\\reducers\\alert.js":"40","C:\\MERN\\coders_assemble\\client\\src\\reducers\\auth.js":"41","C:\\MERN\\coders_assemble\\client\\src\\reducers\\post.js":"42","C:\\MERN\\coders_assemble\\client\\src\\reducers\\profile.js":"43"},{"size":155,"mtime":1610340960825,"results":"44","hashOfConfig":"45"},{"size":2592,"mtime":1639633470971,"results":"46","hashOfConfig":"45"},{"size":396,"mtime":1610369793575,"results":"47","hashOfConfig":"45"},{"size":267,"mtime":1610525824938,"results":"48","hashOfConfig":"45"},{"size":2549,"mtime":1639633449408,"results":"49","hashOfConfig":"45"},{"size":1612,"mtime":1618317027347,"results":"50","hashOfConfig":"45"},{"size":457,"mtime":1610372495197,"results":"51","hashOfConfig":"45"},{"size":1105,"mtime":1618316446064,"results":"52","hashOfConfig":"45"},{"size":1943,"mtime":1611063073680,"results":"53","hashOfConfig":"45"},{"size":3638,"mtime":1610629106353,"results":"54","hashOfConfig":"45"},{"size":6539,"mtime":1611063355760,"results":"55","hashOfConfig":"45"},{"size":3575,"mtime":1610629084605,"results":"56","hashOfConfig":"45"},{"size":8231,"mtime":1611035710063,"results":"57","hashOfConfig":"45"},{"size":1373,"mtime":1639640089374,"results":"58","hashOfConfig":"45"},{"size":3009,"mtime":1611034975294,"results":"59","hashOfConfig":"45"},{"size":1872,"mtime":1610516039418,"results":"60","hashOfConfig":"45"},{"size":745,"mtime":1610630279456,"results":"61","hashOfConfig":"45"},{"size":2811,"mtime":1610515491463,"results":"62","hashOfConfig":"45"},{"size":1240,"mtime":1611046019573,"results":"63","hashOfConfig":"45"},{"size":1027,"mtime":1611048300159,"results":"64","hashOfConfig":"45"},{"size":1017,"mtime":1610524465051,"results":"65","hashOfConfig":"45"},{"size":404,"mtime":1610524466665,"results":"66","hashOfConfig":"45"},{"size":655,"mtime":1610608574248,"results":"67","hashOfConfig":"45"},{"size":1509,"mtime":1611046188627,"results":"68","hashOfConfig":"45"},{"size":308,"mtime":1610606809432,"results":"69","hashOfConfig":"45"},{"size":5621,"mtime":1639638849897,"results":"70","hashOfConfig":"45"},{"size":1495,"mtime":1611046150636,"results":"71","hashOfConfig":"45"},{"size":1013,"mtime":1639634983887,"results":"72","hashOfConfig":"45"},{"size":1882,"mtime":1611035134535,"results":"73","hashOfConfig":"45"},{"size":785,"mtime":1611035033227,"results":"74","hashOfConfig":"45"},{"size":3691,"mtime":1611046000810,"results":"75","hashOfConfig":"45"},{"size":1031,"mtime":1611045694645,"results":"76","hashOfConfig":"45"},{"size":2414,"mtime":1611045753496,"results":"77","hashOfConfig":"45"},{"size":1360,"mtime":1611045612715,"results":"78","hashOfConfig":"45"},{"size":1073,"mtime":1611045629143,"results":"79","hashOfConfig":"45"},{"size":1761,"mtime":1611035160829,"results":"80","hashOfConfig":"45"},{"size":799,"mtime":1611035088612,"results":"81","hashOfConfig":"45"},{"size":808,"mtime":1611035061606,"results":"82","hashOfConfig":"45"},{"size":268,"mtime":1611045451801,"results":"83","hashOfConfig":"45"},{"size":413,"mtime":1610524548227,"results":"84","hashOfConfig":"45"},{"size":1091,"mtime":1610524666979,"results":"85","hashOfConfig":"45"},{"size":1845,"mtime":1611046521922,"results":"86","hashOfConfig":"45"},{"size":979,"mtime":1618295140479,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"h40hmo",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\MERN\\coders_assemble\\client\\src\\index.js",[],["180","181"],"C:\\MERN\\coders_assemble\\client\\src\\App.js",[],"C:\\MERN\\coders_assemble\\client\\src\\store.js",[],"C:\\MERN\\coders_assemble\\client\\src\\utils\\setAuthToken.js",[],"C:\\MERN\\coders_assemble\\client\\src\\actions\\auth.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\layouts\\Navbar.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\layouts\\Alert.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\layouts\\Landing.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\profile-forms\\AddEducation.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\profile-forms\\EditProfile.js",["182","183"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter,Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Edit Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Add some changes to your profile\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={e => onChange(e)}>\r\n            <option>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProfile, getCurrentProfile }\r\n)(withRouter(EditProfile));","C:\\MERN\\coders_assemble\\client\\src\\components\\Profiles\\Profiles.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\Profile.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\auth\\Login.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\routing\\privateRoute.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\auth\\Register.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\post\\Post.js",["184"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layouts/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\nimport { getPost } from '../../actions/post';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className='comments'>\r\n        {post.comments.map(comment => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPost }\r\n)(Post);","C:\\MERN\\coders_assemble\\client\\src\\components\\posts\\Posts.js",["185"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layouts/Spinner';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport { getPosts } from '../../actions/post';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return  (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Posts</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      <div className='posts'>\r\n        {posts.map(post => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPosts }\r\n)(Posts);","C:\\MERN\\coders_assemble\\client\\src\\actions\\types.js",[],"C:\\MERN\\coders_assemble\\client\\src\\actions\\alert.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\layouts\\Spinner.js",[],"C:\\MERN\\coders_assemble\\client\\src\\actions\\profile.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\dashboard\\Education.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\Profiles\\ProfileItem.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\MERN\\coders_assemble\\client\\src\\actions\\post.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\posts\\PostForm.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\posts\\PostItem.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\post\\CommentItem.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\post\\CommentForm.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\ProfileGithub.js",["186"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layouts/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map(repo => (\r\n          <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className='badge badge-dark'>\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getGithubRepos }\r\n)(ProfileGithub);","C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\ProfileExperience.js",[],"C:\\MERN\\coders_assemble\\client\\src\\components\\profile\\ProfileEducation.js",[],"C:\\MERN\\coders_assemble\\client\\src\\reducers\\index.js",[],"C:\\MERN\\coders_assemble\\client\\src\\reducers\\alert.js",[],"C:\\MERN\\coders_assemble\\client\\src\\reducers\\auth.js",[],"C:\\MERN\\coders_assemble\\client\\src\\reducers\\post.js",[],["187","188"],"C:\\MERN\\coders_assemble\\client\\src\\reducers\\profile.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":2,"column":27,"nodeType":"195","messageId":"196","endLine":2,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":48,"column":6,"nodeType":"199","endLine":48,"endColumn":34,"suggestions":"200"},{"ruleId":"197","severity":1,"message":"201","line":14,"column":6,"nodeType":"199","endLine":14,"endColumn":15,"suggestions":"202"},{"ruleId":"193","severity":1,"message":"203","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":15},{"ruleId":"197","severity":1,"message":"204","line":10,"column":6,"nodeType":"199","endLine":10,"endColumn":22,"suggestions":"205"},{"ruleId":"189","replacedBy":"206"},{"ruleId":"191","replacedBy":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["210"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["211"],"'Spinner' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["212"],["208"],["209"],"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"219","text":"220"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"221","text":"222"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"223","text":"224"},[1706,1734],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[525,534],"[getPost, match.params.id]",[345,361],"[getGithubRepos, username]"]